{"version":3,"file":"index.js","sources":["../../src/ts/DragPaneController.ts","../../src/ts/ApplicationInstance.ts","../../src/ts/AppIconController.ts","../../src/ts/HeaderClockController.ts","../../src/ts/index.ts"],"sourcesContent":["export default class DragPaneController {\n\n    public parentEl: HTMLDivElement;\n\n    public dockedQty: number = 0;\n\n    public dockedEl: Set<HTMLElement> = new Set();\n\n    public readonly dragBarHeight = 40;\n\n    constructor(){\n        this.parentEl = document.querySelector<HTMLDivElement>(\"#main\")!;\n\n        this.parentEl.addEventListener('toggleminimize', (event: Event) => {\n            if ((event.target! as any).minimized) {\n                this.handleMinimize(event);\n            } else {\n                this.handleMaximize(event);\n            }\n        });\n\n        window.addEventListener(\"resize\", this.handleWindowResize)\n\n    }\n\n    private handleMinimize = (event: Event) => {\n        const el = (event.target! as HTMLElement);\n        const initialPos = {top: el.style.top, left: el.style.left};\n        el.dataset.initialPos = JSON.stringify(initialPos);\n        el.style.top = `${window.innerHeight - this.dragBarHeight - 20}px`;\n        el.style.left = `${this.dockedQty * 20}px`;\n        this.dockedQty ++;\n        this.dockedEl.add(el);\n    };\n\n    private handleMaximize = (event: Event) => {\n        const el = (event.target! as HTMLElement);\n        this.dockedQty --;\n        this.dockedEl.delete(el);\n        const initialPos = el.dataset.initialPos;\n        if (initialPos) {\n            const initialPosObj = JSON.parse(initialPos);\n            el.style.top = initialPosObj.top;\n            el.style.left = initialPosObj.left;\n        };\n    };\n\n    private handleWindowResize = () => {\n        this.dockedEl.forEach( (el) => {\n            el.style.top = `${window.innerHeight - this.dragBarHeight - 20}px`;\n        });\n    };\n}","import {DragPane} from \"./Interfaces/CustomElements\";\nimport AppIconController, {App} from \"./AppIconController\";\n\nexport default class ApplicationInstance<AppType extends HTMLElement = HTMLElement> {\n\n    public appID: App;\n    public applicationEl: AppType;\n    public paneWrapperEl: DragPane.Element;\n    public parentEl: HTMLDivElement;\n\n    constructor(app: App, tagName: string, paneHeading: string, parentEl: HTMLDivElement){\n        this.appID = app;\n        this.parentEl = parentEl;\n\n        this.applicationEl = document.createElement(tagName) as AppType;\n        this.paneWrapperEl = document.createElement(\"drag-pane\") as DragPane.Element;\n        this.paneWrapperEl.heading = paneHeading;\n        this.paneWrapperEl.id = app;\n        this.paneWrapperEl.className = \"app-pane\";\n    }\n\n    public openApp(){\n        if (!AppIconController.openApps.has(this.appID)) {\n\n            this.paneWrapperEl.appendChild(this.applicationEl);\n            this.parentEl.appendChild(this.paneWrapperEl);\n\n            AppIconController.openApps.set(this.appID, this.paneWrapperEl);\n            AppIconController.activeApp = this.appID;\n\n            this.paneWrapperEl.addEventListener(\"remove\", () => {\n                AppIconController.openApps.delete(this.appID);\n            }, {once: true});\n\n            this.paneWrapperEl.addEventListener(\"click\", () => {\n                if (AppIconController.activeApp !== this.appID && AppIconController.openApps.size > 1)\n                this.moveToTop(this.appID);\n            });\n        }else {\n            (AppIconController.openApps.get(this.appID) as DragPane.Element)?.toggleMinimized();\n        }\n    }\n\n    private moveToTop = (app: App) => {\n        AppIconController.openApps.forEach( (value, key) => {\n            value.style.zIndex = \"1\";\n        });\n        AppIconController.openApps.get(app)!.style.zIndex = \"2\";\n        AppIconController.activeApp = app;\n    };\n}","import {DragPane, MinesweeperGame} from \"./Interfaces/CustomElements\";\nimport ApplicationInstance from \"./ApplicationInstance\";\n\nexport enum App {\n    MINESWEEPER = \"ms-app\",\n    CLOCK = \"clock-app\",\n};\n\nexport default class AppIconController {\n\n    public iconRef: NodeListOf<HTMLDivElement>;\n    public parentEl: HTMLDivElement;\n\n    public msApp: ApplicationInstance<MinesweeperGame.Element>;\n    public clockApp: ApplicationInstance;\n\n    public static openApps: Map<App, HTMLElement> = new Map();\n    public static activeApp: App|undefined = undefined;\n\n\n    constructor(){\n        this.iconRef = document.querySelectorAll<HTMLDivElement>(\".click-icon\");\n        this.parentEl = document.querySelector<HTMLDivElement>(\"#main\")!;\n\n        this.iconRef.forEach( (el) => {\n            el.addEventListener(\"dblclick\", this.handleIconDblClick);\n        });\n\n\n        this.msApp = new ApplicationInstance<MinesweeperGame.Element>(App.MINESWEEPER, \"minesweeper-game\", \"Minesweeper\", this.parentEl);\n        this.msApp.applicationEl.width = 10;\n        this.msApp.applicationEl.height = 10;\n        this.msApp.applicationEl.scale = 0.6;\n\n        this.clockApp = new ApplicationInstance(App.CLOCK, \"date-clock\", \"Clock\", this.parentEl);\n    }\n\n    // private moveToTop = (app: App) => {\n    //     AppIconController.openApps.forEach( (value, key) => {\n    //         value.style.zIndex = \"1\";\n    //     });\n    //     AppIconController.openApps.get(app)!.style.zIndex = \"2\";\n    //     AppIconController.activeApp = app;\n    // };\n\n    private handleIconDblClick = (event: MouseEvent) => {\n        const appID = (event.currentTarget as HTMLDivElement).dataset.appName;\n        switch (appID) {\n            case \"ms-app\":\n                this.msApp.openApp();\n                break;\n            case \"clock-app\":\n                this.clockApp.openApp();\n                break;\n            default:\n                console.log(appID);\n                break;\n        }\n    };\n\n    private openMsApp(){\n        // if (!AppIconController.openApps.has(App.MINESWEEPER)) {\n        //     const pane = document.createElement(\"drag-pane\") as DragPane.Element;\n        //     pane.heading = \"Minesweeper\";\n        //     pane.id = App.MINESWEEPER;\n        //     pane.className = \"app-pane\";\n\n        //     const msGame = document.createElement(\"minesweeper-game\") as MinesweeperGame.Element;\n        //     msGame.width = 10;\n        //     msGame.height = 10;\n        //     msGame.scale = 0.6;\n\n        //     pane.appendChild(msGame);\n        //     this.parentEl.appendChild(pane);\n\n        //     AppIconController.openApps.set(App.MINESWEEPER, pane);\n        //     AppIconController.activeApp = App.MINESWEEPER;\n\n        //     pane.addEventListener(\"remove\", () => {\n        //         AppIconController.openApps.delete(App.MINESWEEPER);\n        //     }, {once: true});\n\n        //     pane.addEventListener(\"click\", () => {\n        //         if (AppIconController.activeApp !== App.MINESWEEPER && AppIconController.openApps.size > 1 )\n        //         this.moveToTop(App.MINESWEEPER);\n        //     });\n        // } else {\n        //     (AppIconController.openApps.get(App.MINESWEEPER) as DragPane.Element)?.toggleMinimized();\n        // }\n    };\n\n    // private openClockApp(){\n    //     if (!AppIconController.openApps.has(App.CLOCK)) {\n    //         const pane = document.createElement(\"drag-pane\") as DragPane.Element;\n    //         pane.heading = \"Clock\";\n    //         pane.id = App.CLOCK;\n    //         pane.className = \"app-pane\";\n\n    //         const clock = document.createElement(\"date-clock\");\n\n    //         pane.appendChild(clock);\n    //         this.parentEl.appendChild(pane);\n\n    //         AppIconController.openApps.set(App.CLOCK, pane);\n    //         AppIconController.activeApp = App.CLOCK;\n\n    //         pane.addEventListener(\"remove\", () => {\n    //             AppIconController.openApps.delete(App.CLOCK);\n    //         }, {once: true});\n\n    //         pane.addEventListener(\"click\", () => {\n    //             if (AppIconController.activeApp !== App.CLOCK && AppIconController.openApps.size > 1)\n    //             this.moveToTop(App.CLOCK);\n    //         });\n    //     }else {\n    //         (AppIconController.openApps.get(App.CLOCK) as DragPane.Element)?.toggleMinimized();\n    //     }\n    // }\n\n\n\n}","export default class HeaderClockController {\n\n    el: HTMLDivElement;\n\n    is24Hr: boolean = true;\n    monthFormat: \"short\"|\"long\" = \"short\";\n\n    dayNames: Map<number, string> = new Map([\n        [0, \"Sunday\"],\n        [1, \"Monday\"],\n        [2, \"Tuesday\"],\n        [3, \"Wednesday\"],\n        [4, \"Thursday\"],\n        [5, \"Friday\"],\n        [6, \"Saturday\"],\n    ]);\n\n    monthNames: Map<number, {long:string, short:string}> = new Map([\n        [0, {long:\"January\", short:\"Jan\"}],\n        [1, {long:\"February\", short:\"Feb\"}],\n        [2, {long:\"March\", short:\"Mar\"}],\n        [3, {long:\"April\", short:\"Apr\"}],\n        [4, {long:\"May\", short:\"May\"}],\n        [5, {long:\"June\", short:\"Jun\"}],\n        [6, {long:\"July\", short:\"Jul\"}],\n        [7, {long:\"August\", short:\"Aug\"}],\n        [8, {long:\"September\", short:\"Sep\"}],\n        [9, {long:\"October\", short:\"Oct\"}],\n        [10, {long:\"November\", short:\"Nov\"}],\n        [10, {long:\"December\", short:\"Dec\"}],\n    ]);\n\n    constructor(){\n        this.el = document.querySelector<HTMLDivElement>(\"#header-clock\")!;\n        this.setDateTime();\n        window.setInterval(() => this.setDateTime(), 1000);\n    }\n\n    public buildDateTime(){\n        const date = new Date();\n        const dayName = this.dayNames.get(date.getDay());\n        const dateNumber = date.getDate();\n        const monthName = this.monthNames.get(date.getMonth())![this.monthFormat];\n        const hours = (this.is24Hr ? date.getHours() : date.getHours()%12).toString();\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n        const seconds = date.getSeconds().toString().padStart(2, '0');\n        return `${dayName} ${monthName} ${dateNumber} ${hours}:${minutes}:${seconds}`\n    }\n\n    public setDateTime(){\n        this.el.innerText = this.buildDateTime();\n    }\n}","import DragPaneController from \"./DragPaneController\";\nimport AppIconController from \"./AppIconController\";\nimport HeaderClockController from \"./HeaderClockController\";\n\nexport const initializeViewControllers = () => {\n    new DragPaneController();\n    new AppIconController();\n    new HeaderClockController();\n}"],"names":["DragPaneController","[object Object]","this","Set","event","el","target","initialPos","top","style","left","dataset","JSON","stringify","window","innerHeight","dragBarHeight","dockedQty","dockedEl","add","delete","initialPosObj","parse","forEach","parentEl","document","querySelector","addEventListener","minimized","handleMinimize","handleMaximize","handleWindowResize","ApplicationInstance","app","tagName","paneHeading","AppIconController","openApps","value","key","zIndex","get","activeApp","appID","applicationEl","createElement","paneWrapperEl","heading","id","className","has","toggleMinimized","appendChild","set","once","size","moveToTop","App","currentTarget","appName","msApp","openApp","clockApp","console","log","iconRef","querySelectorAll","handleIconDblClick","MINESWEEPER","width","height","scale","CLOCK","Map","undefined","HeaderClockController","long","short","setDateTime","setInterval","date","Date","dayName","dayNames","getDay","dateNumber","getDate","monthNames","getMonth","monthFormat","is24Hr","getHours","toString","getMinutes","padStart","getSeconds","innerText","buildDateTime","initializeViewControllers"],"mappings":"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"}